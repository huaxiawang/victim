import com.victim.Proficiency
import com.victim.person.Employee
import com.victim.person.Profile
import com.victim.skills.SkillItems
import com.victim.skills.SkillType
import com.victim.user.User

class BootStrap {

    def init = { servletContext ->
      User user = new User(username: 'Admin', password: 'Admin123')
      user.save(flush: true, failOnError: true)

      SkillType Projects = new SkillType(skillTypeName: "Projects")
      SkillType OrganizationalExperience = new SkillType(skillTypeName: "Organizational Experience")
      SkillType WorkExperience = new SkillType(skillTypeName: "Work Experience")
      SkillType Training = new SkillType(skillTypeName: "Training")
      SkillType Competency = new SkillType(skillTypeName: "Competency")
      Projects.save(flush: true, failOnError: true)
      OrganizationalExperience.save(flush: true, failOnError: true)
      WorkExperience.save(flush: true, failOnError: true)
      Training.save(flush: true, failOnError: true)
      Competency.save(flush: true, failOnError: true)

      SkillItems messagingService = new SkillItems(skillItemName: "Messaging Service", skillType: Projects, description: "Messaging Service project description")
      SkillItems connectathon = new SkillItems(skillItemName: "Connectathon", skillType: Projects, description: "Connectathon project description")
      SkillItems grailsUpgrade = new SkillItems(skillItemName: "Grails Upgrade", skillType: Projects, description: "Grails Upgrade project description")
      SkillItems backlogGrooming = new SkillItems(skillItemName: "Backlog Grooming", skillType: Projects, description: "Backlog Grooming project description")
      messagingService.save(flush: true, failOnError: true)
      connectathon.save(flush: true, failOnError: true)
      grailsUpgrade.save(flush: true, failOnError: true)
      backlogGrooming.save(flush: true, failOnError: true)

      SkillItems studentCouncil = new SkillItems(skillItemName: "Student Council", skillType: OrganizationalExperience, description: "Student Council organizational experience description")
      SkillItems senate = new SkillItems(skillItemName: "Senate", skillType: OrganizationalExperience, description: "Senate organizational experience description")
      SkillItems headOfOrganization = new SkillItems(skillItemName: "Head of Organization", skillType: OrganizationalExperience, description: "Head of Organization organizational experience description")
      studentCouncil.save(flush: true, failOnError: true)
      senate.save(flush: true, failOnError: true)
      headOfOrganization.save(flush: true, failOnError: true)

      SkillItems softwareEngineer = new SkillItems(skillItemName: "Software Engineer", skillType: WorkExperience, description: "Software Engineer work experience description")
      SkillItems projectManager = new SkillItems(skillItemName: "Project Manager", skillType: WorkExperience, description: "Project Manager work experience description")
      SkillItems qualityAssurance = new SkillItems(skillItemName: "Quality Assurance", skillType: WorkExperience, description: "Quality Assurance work experience description")
      SkillItems productionSupport = new SkillItems(skillItemName: "Production Support", skillType: WorkExperience, description: "Production Support work experience description")
      softwareEngineer.save(flush: true, failOnError: true)
      projectManager.save(flush: true, failOnError: true)
      qualityAssurance.save(flush: true, failOnError: true)
      productionSupport.save(flush: true, failOnError: true)

      SkillItems sevenHabit = new SkillItems(skillItemName: "Seven Habit of Highly Effective People", skillType: Training, description: "Seven Habit of Highly Effective People Training description")
      SkillItems leadership = new SkillItems(skillItemName: "Leadership", skillType: Training, description: "Leadership Training description")
      SkillItems groovyGrails = new SkillItems(skillItemName: "Groovy Grails", skillType: Training, description: "Groovy Grails Training description")
      SkillItems ICD9 = new SkillItems(skillItemName: "ICD-9", skillType: Training, description: "ICD-9 Training description")
      SkillItems HL7ForDummies = new SkillItems(skillItemName: "HL7 for dummies", skillType: Training, description: "HL7 for dummies Training description")
      sevenHabit.save(flush: true, failOnError: true)
      leadership.save(flush: true, failOnError: true)
      groovyGrails.save(flush: true, failOnError: true)
      ICD9.save(flush: true, failOnError: true)
      HL7ForDummies.save(flush: true, failOnError: true)

      SkillItems groovy = new SkillItems(skillItemName: "Groovy", skillType: Competency, description: "Groovy competency description")
      SkillItems java = new SkillItems(skillItemName: "Java", skillType: Competency, description: "Java competency description")
      SkillItems grails = new SkillItems(skillItemName: "Grails", skillType: Competency, description: "Grails competency description")
      SkillItems scala = new SkillItems(skillItemName: "Scala", skillType: Competency, description: "Scala competency description")
      SkillItems cpp = new SkillItems(skillItemName: "C++", skillType: Competency, description: "C++ competency description")
      SkillItems hl7 = new SkillItems(skillItemName: "HL7", skillType: Competency, description: "HL-7 competency description")
      SkillItems pixManager = new SkillItems(skillItemName: "Pix Manager", skillType: Competency, description: "Pix Manager competency description")
      SkillItems fuzzyLogic = new SkillItems(skillItemName: "Fuzzy Logic", skillType: Competency, description: "Fuzzy Logic competency description")
      SkillItems icd9 = new SkillItems(skillItemName: "ICD9", skillType: Competency, description: "ICD-9 competency description")
      SkillItems icd10 = new SkillItems(skillItemName: "ICD10", skillType: Competency, description: "ICD-10 competency description")
      SkillItems mobile = new SkillItems(skillItemName: "Mobile", skillType: Competency, description: "Mobile competency description")
      SkillItems network = new SkillItems(skillItemName: "Network", skillType: Competency, description: "Network competency description")
      SkillItems patientSearch = new SkillItems(skillItemName: "Patient Search", skillType: Competency, description: "Patient Search competency description")
      SkillItems camel = new SkillItems(skillItemName: "Apache Camel", skillType: Competency, description: "Apache Camel competency description")
      SkillItems designPatterns = new SkillItems(skillItemName: "Design Patterns", skillType: Competency, description: "Design Patterns competency description")
      SkillItems eip = new SkillItems(skillItemName: "Enterprise Integration Patterns", skillType: Competency, description: "Enterprise Integration Patterns competency description")
      SkillItems hibernate = new SkillItems(skillItemName: "Hibernate", skillType: Competency, description: "Hibernate competency description")
      SkillItems spring = new SkillItems(skillItemName: "Spring", skillType: Competency, description: "Spring competency description")
      SkillItems spock = new SkillItems(skillItemName: "Spock", skillType: Competency, description: "Spock competency description")
      SkillItems selenium = new SkillItems(skillItemName: "Selenium", skillType: Competency, description: "Selenium competency description")
      SkillItems jenkins = new SkillItems(skillItemName: "Jenkins", skillType: Competency, description: "Jenkins competency description")
      SkillItems git = new SkillItems(skillItemName: "Git", skillType: Competency, description: "Git competency description")
      SkillItems oracle = new SkillItems(skillItemName: "Oracle", skillType: Competency, description: "Oracle competency description")
      SkillItems linux = new SkillItems(skillItemName: "Linux", skillType: Competency, description: "Linux competency description")
      groovy.save(flush: true, failOnError: true)
      java.save(flush: true, failOnError: true)
      grails.save(flush: true, failOnError: true)
      scala.save(flush: true, failOnError: true)
      cpp.save(flush: true, failOnError: true)
      hl7.save(flush: true, failOnError: true)
      pixManager.save(flush: true, failOnError: true)
      fuzzyLogic.save(flush: true, failOnError: true)
      icd9.save(flush: true, failOnError: true)
      icd10.save(flush: true, failOnError: true)
      mobile.save(flush: true, failOnError: true)
      network.save(flush: true, failOnError: true)
      patientSearch.save(flush: true, failOnError: true)
      camel.save(flush: true, failOnError: true)
      designPatterns.save(flush: true, failOnError: true)
      eip.save(flush: true, failOnError: true)
      hibernate.save(flush: true, failOnError: true)
      spring.save(flush: true, failOnError: true)
      spock.save(flush: true, failOnError: true)
      selenium.save(flush: true, failOnError: true)
      jenkins.save(flush: true, failOnError: true)
      git.save(flush: true, failOnError: true)
      oracle.save(flush: true, failOnError: true)
      linux.save(flush: true, failOnError: true)

      Profile JohnNathanProfile = new Profile()
      Employee JohnNathan = new Employee(firstName: "John", lastName: "Nathan")
      JohnNathan.save(flush: true, failOnError: true)
      JohnNathanProfile.employee = JohnNathan
      JohnNathanProfile.save(flush: true, failOnError: true)
      JohnNathan.profile = JohnNathanProfile
      JohnNathan.save(flush: true, failOnError: true)

      JohnNathanProfile.addToType(Projects)
      JohnNathanProfile.addToType(OrganizationalExperience)
      JohnNathanProfile.addToType(WorkExperience)
      JohnNathanProfile.addToType(Training)
      JohnNathanProfile.addToType(Competency)
      JohnNathanProfile.save(flush: true, failOnError: true)

      Random random = new Random()


      Proficiency proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: messagingService, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: backlogGrooming, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: headOfOrganization, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: softwareEngineer, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: projectManager, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: groovyGrails, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: sevenHabit, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: groovy, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: grails, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: scala, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: hibernate, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: spring, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: camel, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JohnNathanProfile, skillItems: git, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)

      Profile YouAndProfile = new Profile()
      Employee YouAnd = new Employee(firstName: "You", lastName: "And")
      YouAnd.save(flush: true, failOnError: true)
      YouAndProfile.employee = YouAnd
      YouAndProfile.save(flush: true, failOnError: true)
      YouAnd.profile = YouAndProfile
      YouAnd.save(flush: true, failOnError: true)

      YouAndProfile.addToType(Projects)
      YouAndProfile.addToType(OrganizationalExperience)
      YouAndProfile.addToType(WorkExperience)
      YouAndProfile.addToType(Training)
      YouAndProfile.addToType(Competency)
      YouAndProfile.save(flush: true, failOnError: true)

      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: messagingService, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: backlogGrooming, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: connectathon, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: studentCouncil, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: softwareEngineer, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: productionSupport, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: groovyGrails, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: groovy, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: grails, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: hibernate, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: spring, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: camel, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: git, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: pixManager, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: YouAndProfile, skillItems: hl7, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)

      Profile TeaAndProfile = new Profile()
      Employee TeaAnd = new Employee(firstName: "Tea", lastName: "And")
      TeaAnd.save(flush: true, failOnError: true)
      TeaAndProfile.employee = TeaAnd
      TeaAndProfile.save(flush: true, failOnError: true)
      TeaAnd.profile = TeaAndProfile
      TeaAnd.save(flush: true, failOnError: true)

      TeaAndProfile.addToType(Projects)
      TeaAndProfile.addToType(OrganizationalExperience)
      TeaAndProfile.addToType(WorkExperience)
      TeaAndProfile.addToType(Training)
      TeaAndProfile.addToType(Competency)
      TeaAndProfile.save(flush: true, failOnError: true)

      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: messagingService, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: backlogGrooming, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: grailsUpgrade, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: studentCouncil, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: senate, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: softwareEngineer, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: productionSupport, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: groovyGrails, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: groovy, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: grails, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: hibernate, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: spring, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: camel, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: git, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: pixManager, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: hl7, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: TeaAndProfile, skillItems: patientSearch, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)

      Profile GorgeMooresProfile = new Profile()
      Employee GorgeMoores = new Employee(firstName: "Gorge", lastName: "Moores")
      GorgeMoores.save(flush: true, failOnError: true)
      GorgeMooresProfile.employee = GorgeMoores
      GorgeMooresProfile.save(flush: true, failOnError: true)
      GorgeMoores.profile = GorgeMooresProfile
      GorgeMoores.save(flush: true, failOnError: true)

      GorgeMooresProfile.addToType(Projects)
      GorgeMooresProfile.addToType(OrganizationalExperience)
      GorgeMooresProfile.addToType(WorkExperience)
      GorgeMooresProfile.addToType(Training)
      GorgeMooresProfile.addToType(Competency)
      GorgeMooresProfile.save(flush: true, failOnError: true)

      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: messagingService, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: backlogGrooming, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: grailsUpgrade, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: connectathon, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: headOfOrganization, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: studentCouncil, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: senate, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: softwareEngineer, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: productionSupport, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: projectManager, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: qualityAssurance, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: groovyGrails, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: sevenHabit, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: leadership, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: HL7ForDummies, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: ICD9, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: camel, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: git, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: pixManager, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: hl7, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: patientSearch, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: icd10, level: 10)
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: GorgeMooresProfile, skillItems: icd9, level: 10)
      proficiency1.save(flush: true, failOnError: true)

      Profile JouleLiaProfile = new Profile()
      Employee JouleLia = new Employee(firstName: "Joule", lastName: "Lia")
      JouleLia.save(flush: true, failOnError: true)
      JouleLiaProfile.employee = JouleLia
      JouleLiaProfile.save(flush: true, failOnError: true)
      JouleLia.profile = JouleLiaProfile
      JouleLia.save(flush: true, failOnError: true)

      JouleLiaProfile.addToType(Projects)
      JouleLiaProfile.addToType(OrganizationalExperience)
      JouleLiaProfile.addToType(WorkExperience)
      JouleLiaProfile.addToType(Training)
      JouleLiaProfile.addToType(Competency)
      JouleLiaProfile.save(flush: true, failOnError: true)

      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: messagingService, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: backlogGrooming, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: grailsUpgrade, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: studentCouncil, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: senate, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: softwareEngineer, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: productionSupport, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: groovyGrails, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: groovy, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: grails, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: hibernate, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: spring, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: camel, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: git, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: pixManager, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: hl7, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
      proficiency1 = new Proficiency(profile: JouleLiaProfile, skillItems: patientSearch, level: 6 + random.nextInt(4))
      proficiency1.save(flush: true, failOnError: true)
    }

    def destroy = {
    }
}
